name: Release üîñ

on:
    workflow_dispatch:
        inputs:
            image:
                required: true
                default: false
                type: boolean
            release-note:
                required: true
                default: false
                type: boolean
            swagger:
                required: true
                default: false
                type: boolean
            sdk:
                required: true
                default: false
                type: boolean

permissions:
    id-token: write
    contents: write
    packages: write
    pages: write

env:
    DATABASE_URL: postgresql://test:test@localhost:5432/test
    GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
    test:
        runs-on: ubuntu-latest

        services:
            postgres:
                image: postgres:14
                env:
                    POSTGRES_USER: test
                    POSTGRES_PASSWORD: test
                    POSTGRES_DB: test
                options: >-
                    --health-cmd="pg_isready"
                    --health-interval 10s
                    --health-timeout 5s
                    --health-retries 5
                ports:
                    - 5432:5432

        steps:
            - name: Checkout üõéÔ∏è
              uses: actions/checkout@main

            - name: Setup NodeJS
              uses: actions/setup-node@main
              with:
                  node-version: 20

            - name: Install & Build
              run: npm ci && npm run build:sdk

            - name: Setup DB
              run: npm run db:deploy

            - name: Test üß™
              run: npm run test

    release-note:
        if: github.event.inputs.release-note == 'true'
        runs-on: ubuntu-latest
        concurrency:
            group: ${{ github.workflow }}-release-note
            cancel-in-progress: true

        steps:
            - name: Checkout üõéÔ∏è
              uses: actions/checkout@main

            - name: Create Release Note üîñ
              run: |
                  VERSION=v$(node -p "require('./package.json').version")
                  git config --global user.email "github-actions@github.com"
                  git config --global user.name "GitHub Actions"
                  if git rev-parse "v$VERSION" >/dev/null 2>&1; then
                    echo "Tag v$VERSION already exist."
                    exit 1
                  fi
                  git tag -a "$VERSION" -m "release $VERSION"
                  git push origin "$VERSION"
                  gh release create "$VERSION" -t "$VERSION" --target "${{ github.sha }}" --generate-notes

    swagger:
        if: github.event.inputs.swagger == 'true'
        runs-on: ubuntu-latest
        concurrency:
            group: ${{ github.workflow }}-swagger
            cancel-in-progress: true

        steps:
            - name: Checkout üõéÔ∏è
              uses: actions/checkout@main

            - name: Setup NodeJS
              uses: actions/setup-node@main
              with:
                  node-version: 20

            - name: Setup Pages
              uses: actions/configure-pages@v5

            - name: Swagger Build
              run: npm ci && npm run build:swagger

            - name: Upload artifact
              uses: actions/upload-pages-artifact@v3
              with:
                  path: ./packages/swagger
                  name: github-pages

            - name: Deploy to Github Pages
              uses: actions/deploy-pages@v4

    sdk:
        if: github.event.inputs.sdk == 'true'
        runs-on: ubuntu-latest
        concurrency:
            group: ${{ github.workflow }}-sdk
            cancel-in-progress: true

        steps:
            - name: Checkout üõéÔ∏è
              uses: actions/checkout@main

            - name: Setup NodeJS
              uses: actions/setup-node@main
              with:
                  node-version: 20
                  registry-url: https://npm.pkg.github.com/
                  scope: "@rojiwon123"

            - name: Swagger Build
              run: npm ci && npm run build:sdk

            - name: Publish
              run: npm publish ./packages/api --access restricted
#
#    deploy-image:
#        runs-on: ubuntu-latest
#        needs: create-release-note
#        steps:
#            - name: Checkout üõéÔ∏è
#              uses: actions/checkout@main
#
#            - name: Configure AWS credentials üîí
#              uses: aws-actions/configure-aws-credentials@v2
#              with:
#                  role-to-assume: ${{ secrets.AWS_ECR_ROLE }}
#                  aws-region: ${{ env.AWS_REGION }}
#
#            - name: Login to Amazon ECR üîí
#              id: login-ecr
#              uses: aws-actions/amazon-ecr-login@v1
#
#            - name: Image Build and Push to Amazon ECR ‚ú®
#              id: build-image
#              env:
#                  ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
#                  IMAGE_TAG: ${{ needs.create-release-note.outputs.release }}
#              run: |
#                  docker build --build-arg GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }} -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
#                  docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
